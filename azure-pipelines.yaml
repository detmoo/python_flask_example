# Azure DevOps YAML Pipeline from Bow Data Toolkits

trigger:
    branches:
        include:
            - "*"

resources:
    repositories:
        - repository: bowdata-toolkits
          type: git
          name: toolkits/bowdata.toolkits.azure-pipelines
          ref: refs/heads/master

parameters:
  - name: workingDirectory
    default: $(Build.SourcesDirectory)
  - name: preRelease
    default: "-a"
  - name: logLevel
    default: DEBUG
    type: string
    displayName: "Log Level"
    values:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL
  - name: azureDockerStageCondition
    default: succeeded()
  - name: azureDockerStageName
    default: AzureDockerStage
  - name: azureDockerStageDependsOn
    type: object
    default: ['Build']
  - name: versionStageDependsOn
    type: object
    default: ['AzureDockerStage']
  - name: dockerhubServiceConnection
    default: "bd-docker-hub-svc-connection"
  - name: dockerhubRepository
    default: "edgeworks"
#  - name: dockerhubAccount
#    default: "bowdataDockerhub"
  - name: containerPort
    default: 5000
  - name: hostPort
    default: 8000
# Parameter Sets
  - name: _ignore_params
    type: object
    default:
      - dockerRunPostSteps
  - name: _general_params
    type: object
    default:
      - logLevel
      - workingDirectory
  - name: _azure_docker_stage_params
    type: object
    default:
      - azureDockerStageName
      - azureDockerStageCondition
      - azureDockerStageDependsOn
      - dockerhubServiceConnection
      - containerPort
      - hostPort
      - containerRuntimeVariables
      - dockerhubAccount
      - dockerhubRepository

stages:
  - template: /python/pipelines/package-pipeline.yaml@bowdata-toolkits
    parameters:
      versionStageDependsOn: ${{parameters.versionStageDependsOn}}
      preRelease: ${{parameters.preRelease}}
      logLevel: ${{parameters.logLevel}}
      workingDirectory: ${{parameters.workingDirectory}}
      integrationTestStages:
        # docker image build, test & push stage on Azure agent
        - template: /containers/stages/azure-docker-stage.yaml@bowdata-toolkits
          parameters:
            ${{ each pair in parameters }}:
              ${{if and(or(containsValue(parameters._azure_docker_stage_params, pair.key), containsValue(parameters._general_params, pair.key)), not(containsValue(parameters._ignore_params, pair.key)))}}:
                ${{pair.key}}: ${{pair.value}}
            dockerRunPostSteps:

              - script: |
                  status_code=$(curl --write-out %{http_code} --silent --output /dev/null http://localhost:${{parameters.hostPort}}/)
                  if [[ "$status_code" -ne 200 ]] ; then
                    echo "Received status $status_code" Expected 200; exit 1
                  else
                    exit 0
                  fi
                displayName: "Smoke Test: WebApp"
                name: SmokeTest_App
                workingDirectory: ${{parameters.workingDirectory}}

              - script: |
                  status_code=$(curl --write-out %{http_code} --silent --output /dev/null http://localhost:${{parameters.hostPort}}/api/capital-of-ukraine)
                  if [[ "$status_code" -ne 200 ]] ; then
                    echo "Received status $status_code" Expected 200; exit 1
                  else
                    exit 0
                  fi
                displayName: "Smoke Test: API"
                name: SmokeTest_Api
                workingDirectory: ${{parameters.workingDirectory}}

              - script: |
                  status_code=$(curl --write-out %{http_code} --silent --output /dev/null http://localhost:${{parameters.hostPort}}/api/this-does-not-exist)
                  if [[ "$status_code" -ne 404 ]] ; then
                    echo "Received status $status_code" Expected 404; exit 1
                  else
                    exit 0
                  fi
                displayName: "Smoke Test: 404"
                name: SmokeTest_404
                workingDirectory: ${{parameters.workingDirectory}}
