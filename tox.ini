[tox]
envlist = {test}-{py39}

[testenv]
install_command = python {toxinidir}/.ci/install.py {packages}
deps =
    -r requirements.txt
    build: wheel
    docs: sphinx
    lint: flake8
    lint: flake8-import-order
    lint: flake8_formatter_junit_xml
    lint: flake8-docstrings
commands =
    test: python .ci/get_pinned_requirements.py
    test: pip install pytest pytest-cov
    test: python -c "import os; a = 1 if os.path.exists('test-reports') else os.makedirs('test-reports')"
    test: pytest -rs tests --junitxml=test-reports/test-results.xml
    lint: python -c "import os; a = 1 if os.path.exists('test-reports') else os.makedirs('test-reports')"
    lint: flake8 src/ --docstring-convention google --show-source --format xml --output-file test-reports/lint-results.xml --exit-zero
    lint: flake8 src/ --docstring-convention google
    docs: python -m sphinx -b html -a {toxinidir}/docs/source {toxinidir}/docs/html
    build: python setup.py sdist --format=zip
    build: python setup.py sdist --format=gztar
    build: python setup.py bdist_wheel


[testenv:test]
install_command = python {toxinidir}/.ci/install.py {packages}

[testenv:develop]
install_command = python -m pip install {packages}
envdir = {toxinidir}/.venv
skip_install=True
deps =
    pytest
    artifacts-keyring
commands =
    python -m pip install -U pip
    pip config --site set global.index-url https://pypi.org/simple
    pip config --site set global.extra-index-url https://pkgs.dev.azure.com/BowData/_packaging/BowData/pypi/simple/
    python -m pip install -rrequirements.txt
    python setup.py develop


[testenv:setup_version]
deps = versioneer
commands = versioneer install
skip_install=True
